<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
    <line>
      <![CDATA[App closed]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="15303" started-at="2020-09-04T18:00:35Z" finished-at="2020-09-04T18:00:50Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="15303" started-at="2020-09-04T18:00:35Z" finished-at="2020-09-04T18:00:50Z">
      <class name="com.amazon.testscript.TVApplianceTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.amazon.testscript.TVApplianceTest@3bbc39f8]" name="setUp" is-config="true" duration-ms="14290" started-at="2020-09-04T23:30:35Z" finished-at="2020-09-04T23:30:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="verifyItemNameAndPrice()[pri:1, instance:com.amazon.testscript.TVApplianceTest@3bbc39f8]" name="verifyItemNameAndPrice" duration-ms="153" started-at="2020-09-04T23:30:49Z" finished-at="2020-09-04T23:30:49Z">
          <exception class="java.lang.ExceptionInInitializerError">
            <full-stacktrace>
              <![CDATA[java.lang.ExceptionInInitializerError
	at io.appium.java_client.pagefactory.utils.ProxyFactory.getEnhancedProxy(ProxyFactory.java:52)
	at io.appium.java_client.pagefactory.utils.ProxyFactory.getEnhancedProxy(ProxyFactory.java:33)
	at io.appium.java_client.pagefactory.AppiumFieldDecorator.proxyForAnElement(AppiumFieldDecorator.java:222)
	at io.appium.java_client.pagefactory.AppiumFieldDecorator.access$0(AppiumFieldDecorator.java:220)
	at io.appium.java_client.pagefactory.AppiumFieldDecorator$1.proxyForLocator(AppiumFieldDecorator.java:105)
	at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:62)
	at io.appium.java_client.pagefactory.AppiumFieldDecorator.decorate(AppiumFieldDecorator.java:160)
	at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:113)
	at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
	at com.amazon.pageobject.LoginPage.<init>(LoginPage.java:31)
	at com.amazon.testscript.TVApplianceTest.verifyItemNameAndPrice(TVApplianceTest.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
Caused by: java.lang.IllegalArgumentException
	at org.objectweb.asm.ClassVisitor.<init>(ClassVisitor.java:69)
	at net.sf.cglib.core.DebuggingClassWriter.<init>(DebuggingClassWriter.java:49)
	at net.sf.cglib.core.DefaultGeneratorStrategy.getClassVisitor(DefaultGeneratorStrategy.java:30)
	at net.sf.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:24)
	at net.sf.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:332)
	at net.sf.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:96)
	at net.sf.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:94)
	at net.sf.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at net.sf.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61)
	at net.sf.cglib.core.internal.LoadingCache.get(LoadingCache.java:34)
	at net.sf.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:119)
	at net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:294)
	at net.sf.cglib.core.KeyFactory$Generator.create(KeyFactory.java:221)
	at net.sf.cglib.core.KeyFactory.create(KeyFactory.java:174)
	at net.sf.cglib.core.KeyFactory.create(KeyFactory.java:153)
	at net.sf.cglib.proxy.Enhancer.<clinit>(Enhancer.java:73)
	... 35 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ExceptionInInitializerError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyItemNameAndPrice -->
        <test-method status="PASS" signature="postCondition(org.testng.ITestResult)[pri:0, instance:com.amazon.testscript.TVApplianceTest@3bbc39f8]" name="postCondition" is-config="true" duration-ms="767" started-at="2020-09-04T23:30:49Z" finished-at="2020-09-04T23:30:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyItemNameAndPrice status=FAILURE method=TVApplianceTest.verifyItemNameAndPrice()[pri:1, instance:com.amazon.testscript.TVApplianceTest@3bbc39f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method status="PASS" signature="quitClass()[pri:0, instance:com.amazon.testscript.TVApplianceTest@3bbc39f8]" name="quitClass" is-config="true" duration-ms="0" started-at="2020-09-04T23:30:50Z" finished-at="2020-09-04T23:30:50Z">
          <reporter-output>
            <line>
              <![CDATA[App closed]]>
            </line>
          </reporter-output>
        </test-method> <!-- quitClass -->
      </class> <!-- com.amazon.testscript.TVApplianceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
